{
  "compilerOptions": {
    "target": "ES6",
    "module": "esnext",
    /**
     * svelte-preprocess cannot figure out whether you have
     * a value or a type, so tell TypeScript to enforce using
     * `import type` instead of `import` for Types.
     */
    "verbatimModuleSyntax": true,
    "isolatedModules": true,
    "resolveJsonModule": true,
    /**
     * To have warnings / errors of the Svelte compiler at the
     * correct position, enable source maps by default.
     */
    "sourceMap": true,
    "baseUrl": "./",
    "moduleResolution": "node",
//    "moduleResolution": "bundler",
    "strict": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
        /**
     * Typecheck JS in `.svelte` and `.js` files by default.
     * Disable this if you'd like to use dynamic types.
     */
    "checkJs": true,
    "forceConsistentCasingInFileNames": true,
    "paths": {
      "@/*": [
        "src/*"
      ]
    },
    "lib": [
      "esnext",
      "dom",
      "dom.iterable",
      "scripthost"
    ]
  },
  "exclude": [
    "node_modules",
    "dist"
  ],
    /**
   * Use global.d.ts instead of compilerOptions.types
   * to avoid limiting type declarations.
   */
  "include": [
    // "src/**/*.ts",
    // "src/**/*.tsx",
    "src/**/*.js",
    // "src/**/*.jsx",
    // "src/**/*.json",
    // "src/**/*.vue",
    // "src/**/*.d.ts",
    "src/**/*.svelte"
  ]
}